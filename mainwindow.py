import sys

from PyQt5 import QtGui, QtCore, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QApplication, QLayout, QDialog
import sendfile
import console
NAME="Covert Ops Malware Uploader"
class MasterWindow(QMainWindow):
    def __init__(self):
        super(MasterWindow, self).__init__()
        self.centralWidget = QtWidgets.QWidget(self)
        self.setCentralWidget(self.centralWidget)
        self.setWindowTitle(NAME)
    
class MainWindow(QDialog):
    """I can't get this to work with QMainWindow, it does not add the separate widgets together, 
    despite adding them to the layout... it only shows the widget which is set as the central widget. 
    Changing QmainWindow to QDialog fixes the issue..."""
    def __init__(self, logger=None):
        super(MainWindow, self).__init__()
        self.logger = logger
        self.centralwidget = QtWidgets.QWidget()
        self.setupUi()
        
    def setupUi(self):
        if self.logger:
            print("got here")
            self.logger.setText("Inside Setup")
        def setupMenuBar(self):
            #setup menubar
            self.menubar = QtWidgets.QMenuBar(self)
            self.menubar.setGeometry(QtCore.QRect(0, 0, 573, 31))
            self.fileMenu = QtWidgets.QMenu(self.menubar)
            self.setMenuBar(self.menubar)

        self.resize(573,468)
        #QtCore.QMetaObject.connectSlotsByName(self)

    def changeStatus(self, *args):
        message = ""
        for arg in args:
            message += arg
        self.bar.showMessage(message)
    def updateLogger(self, text):
        self.logger.append(text)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    print("test")
    master = MasterWindow()
    cconsole = console.Console()    
    main = MainWindow(cconsole)
    dropSite = sendfile.DropSiteWindow(cconsole)
    main.logger = cconsole
    layout = QtWidgets.QVBoxLayout()        
    layout.addWidget(dropSite)
    layout.addWidget(cconsole)
    main.setLayout(layout)
    #main.show()
    master.setCentralWidget(main)
    master.show()
    main.updateLogger("INFORMATIONAL")
    sys.exit(app.exec_())
    